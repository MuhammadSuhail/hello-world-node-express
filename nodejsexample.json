{

  "apiVersion": "v1",

  "kind": "Template",

  "labels": {

    "template": "NodeJsHelloWorldPipeline"

  },

  "message": "A Jenkins server will be automatically instantiated in this project to manage\nthe Pipeline BuildConfig created by this template.  You will be able to log in to\nit using your OpenShift user credentials.",

  "metadata": {

    "annotations": {

      "openshift.io/display-name": "Pipeline Build Example",

      "description": "This example showcases the new Jenkins Pipeline integration in OpenShift,\nwhich performs continuous integration and deployment right on the platform.\nThe template contains a Jenkinsfile - a definition of a multi-stage CI/CD process - that\nleverages the underlying OpenShift platform for dynamic and scalable\nbuilds. OpenShift integrates the status of your pipeline builds into the web\nconsole allowing you to see your entire application lifecycle in a single view.",

      "iconClass": "icon-jenkins",

      "tags": "instant-app,jenkins"

    },

    "name": "jenkins-pipeline-example"

  },

  "parameters": [

    {

      "description": "The name assigned to all of the frontend objects defined in this template.",

      "displayName": "Name",

      "name": "NAME",

      "required": true,

      "value": "nodejs-mongodb-example"

    },{

      "description": "The URL of the repository with your application source code.",

      "displayName": "Git Repository URL",

      "name": "SOURCE_REPOSITORY_URL",

      "required": true,

      "value": "https://github.com/MuhammadSuhail/hello-world-node-express.git"

    },{

      "description": "Set this to a branch name, tag or other ref of your repository if you are not using the default branch.",

      "displayName": "Git Reference",

      "name": "SOURCE_REPOSITORY_REF"

    },

    {

      "description": "Set this to the relative path to your project if it is not in the root of your repository.",

      "displayName": "Context Directory",

      "name": "CONTEXT_DIR"

    },

     {

      "description": "The exposed hostname that will route to the Node.js service, if left blank a value will be defaulted.",

      "displayName": "Application Hostname",

      "name": "APPLICATION_DOMAIN"

    },

     {

      "description": "Maximum amount of memory the Node.js container can use.",

      "displayName": "Memory Limit",

      "name": "MEMORY_LIMIT",

      "required": true,

      "value": "512Mi"

    }

  ],

  "objects": [
 {

      "apiVersion": "v1",

      "kind": "BuildConfig",

      "metadata": {

        "annotations": {

          "description": "Defines how to build the application"

        },

        "name": "${NAME}"

      },

      "spec": {

        "output": {

          "to": {

            "kind": "ImageStreamTag",

            "name": "${NAME}:latest"

          }

        },

        "source": {

          "contextDir": "${CONTEXT_DIR}",

          "git": {

            "ref": "${SOURCE_REPOSITORY_REF}",

            "uri": "${SOURCE_REPOSITORY_URL}"

          },

          "type": "Git"

        },

        "strategy": {

          "sourceStrategy": {

            "from": {

              "kind": "ImageStreamTag",

              "name": "nodejs:4"

            }

          },

          "type": "Source"

        }

      }

    },

     {

      "apiVersion": "v1",

      "kind": "Service",

      "metadata": {

        "annotations": {

         

        },

        "name": "${NAME}"

      },

      "spec": {

        "ports": [

          {

            "name": "web",

            "port": 3000,

            "targetPort": 3000

          }

        ],

        "selector": {

          "name": "${NAME}"

        }

      }

    },

    {

      "apiVersion": "v1",

      "kind": "Route",

      "metadata": {

        "name": "${NAME}"

      },

      "spec": {

        "host": "${APPLICATION_DOMAIN}",

        "to": {

          "kind": "Service",

          "name": "${NAME}"

        }

      }

    },

    {

      "apiVersion": "v1",

      "kind": "ImageStream",

      "metadata": {

        "annotations": {

          "description": "Keeps track of changes in the application image"

        },

        "name": "${NAME}"

      }

    },

     {

      "apiVersion": "v1",

      "kind": "DeploymentConfig",

      "metadata": {

        "annotations": {

          "description": "Defines how to deploy the application server"

        },

        "name": "${NAME}"

      },

      "spec": {

        "replicas": 1,

        "selector": {

          "name": "${NAME}"

        },

        "strategy": {

          "type": "Rolling"

        },

        "template": {

          "metadata": {

            "labels": {

              "name": "${NAME}"

            },

            "name": "${NAME}"

          },

          "spec": {

            "containers": [

              {

                "env": [

                  

                ],

                "image": " ",

                "name": "nodejs-mongodb-example",

                "ports": [

                  {

                    "containerPort": 3000

                  }

                ],

                "resources": {

                  "limits": {

                    "memory": "${MEMORY_LIMIT}"

                  }

                }

              }

            ]

          }

        },

        "triggers": [

          {

            "imageChangeParams": {

              "automatic": false,

              "containerNames": [

                "nodejs-mongodb-example"

              ],

              "from": {

                "kind": "ImageStreamTag",

                "name": "${NAME}:latest"

              }

            },

            "type": "ImageChange"

          },

          {

            "type": "ConfigChange"

          }

        ]

      }

    }

  ]

}